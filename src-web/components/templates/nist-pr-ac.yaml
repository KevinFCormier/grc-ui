# an available choice for the specs control
name:
  NIST PR.AC
description:
  Protect access to physical and logical assests
multiselect:
  specs
replacements: # if user select this choice, the template variable names and values to use
  standards: |
    NIST
  categories: |
    IdentityManagementControl
  controls: |
    VulnerbilityAdvisor
  policyTemplates: |
    - objectDefinition:
        apiVersion: policies.ibm.com/v1alpha1
        kind: CertificatePolicy # cert management expiration
        metadata:
          name: {{name}}-example
          label:
            category: "System-Integrity"
        spec:
          namespaceSelector:
            include: ["default"]
            exclude: []
          remediationAction: inform
          severity: low
          minimumDuration: 300h
    - objectDefinition:
        apiVersion: iam.policies.ibm.com/v1alpha1
        kind: IamPolicy # limit clusteradminrole and report violation in IAM RBAC
        metadata:
          name: {{name}}-example
          label:
            category: "System-Integrity"
        spec:
          severity: medium
          namespaceSelector:
            include: ["default","kube-*"]
            exclude: ["kube-system"]
          remediationAction: inform
          maxClusterRoleBindingUsers: 10
          maxRoleBindingViolationsPerNamespace: 2
  objectTemplates: |
    - complianceType: musthave
      objectDefinition:
        kind: RoleBinding # role binding must exist
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: operate-pods-rolebinding
        subjects:
        - kind: User
          name: admin # Name is case sensitive
          apiGroup: rbac.authorization.k8s.io
        roleRef:
          kind: Role #this must be Role or ClusterRole
          name: operator # this must match the name of the Role or ClusterRole you wish to bind to
          apiGroup: rbac.authorization.k8s.io
  roleTemplates: |
    - apiVersion: roletemplate.mcm.ibm.com/v1alpha1 # role must follow defined permissions
      metadata:
        namespace: "" # will be inferred
        name: operator-role-policy
      selector:
        matchLabels:
          dev: "true"
      complianceType: musthave # at this level, it means the role must exist with the rules that it musthave below
      rules:
        - complianceType: musthave # at this level, it means if the role exists the rule is a musthave
          policyRule:
            apiGroups: ["extensions", "apps"]
            resources: ["deployments"]
            verbs: ["get", "list", "watch", "create", "delete","patch"]
        - complianceType: "mustnothave" # at this level, it means if the role exists the rule is a mustnothave
          policyRule:
            apiGroups: ["core"]
            resources: ["secrets"]
            verbs: ["get", "list", "watch","delete", "create", "update", "patch"]

