/*******************************************************************************
 * Licensed Materials - Property of IBM
 * (c) Copyright IBM Corporation 2019. All Rights Reserved.
 *
 * Note to U.S. Government Users Restricted Rights:
 * Use, duplication or disclosure restricted by GSA ADP Schedule
 * Contract with IBM Corp.
 *******************************************************************************/
'use strict'

import React from 'react'
import CreationView from '../../../src-web/components/CreationView'
import renderer from 'react-test-renderer'

const existing =
{
  'clusterLabels':[
    {
      'key':'cloud',
      'value':'IBM'
    },
    {
      'key':'datacenter',
      'value':'toronto'
    },
    {
      'key':'environment',
      'value':'Dev'
    },
    {
      'key':'owner',
      'value':'marketing'
    },
    {
      'key':'region',
      'value':'US'
    },
    {
      'key':'vendor',
      'value':'ICP'
    }
  ],
  'compliances':[
    {
      'name':'grc-policy',
      'namespace':'mcm',
      'annotations':{
        'policy.mcm.ibm.com/categories':'',
        'policy.mcm.ibm.com/controls':'',
        'policy.mcm.ibm.com/standards':'',
        'seed-generation':'1'
      },
      'spec':{
        'complianceType':'musthave',
        'namespaces':{
          'exclude':[
            'kube-*'
          ],
          'include':[
            'default'
          ]
        },
        'object-templates':[
          {
            'complianceType':'musthave',
            'objectDefinition':{
              'apiVersion':'policy/v1beta1',
              'kind':'PodSecurityPolicy',
              'metadata':{
                'annotations':{
                  'seccomp.security.alpha.kubernetes.io/allowedProfileNames':'*'
                },
                'name':'restricted-mcm'
              },
              'spec':{
                'allowPrivilegeEscalation':false,
                'allowedCapabilities':[
                  '*'
                ],
                'fsGroup':{
                  'rule':'RunAsAny'
                },
                'hostIPC':false,
                'hostNetwork':true,
                'hostPID':false,
                'hostPorts':[
                  {
                    'max':65535,
                    'min':1000
                  }
                ],
                'privileged':false,
                'runAsUser':{
                  'rule':'RunAsAny'
                },
                'seLinux':{
                  'rule':'RunAsAny'
                },
                'supplementalGroups':{
                  'rule':'RunAsAny'
                },
                'volumes':[
                  '*'
                ]
              }
            },
            'status':{
              'Validity':{

              }
            }
          }
        ],
        'remediationAction':'enforce'
      },
      '__typename':'ExistingCompliance'
    },
    {
      'name':'grc-policy2',
      'namespace':'mcm',
      'annotations':{
        'policy.mcm.ibm.com/categories':'',
        'policy.mcm.ibm.com/controls':'',
        'policy.mcm.ibm.com/standards':'',
        'seed-generation':'1'
      },
      'spec':{
        'complianceType':'musthave',
        'namespaces':{
          'exclude':[
            'kube-*'
          ],
          'include':[
            'default'
          ]
        },
        'object-templates':[
          {
            'complianceType':'musthave',
            'objectDefinition':{
              'apiVersion':'policy/v1beta1',
              'kind':'PodSecurityPolicy',
              'metadata':{
                'annotations':{
                  'seccomp.security.alpha.kubernetes.io/allowedProfileNames':'*'
                },
                'name':'restricted-mcm'
              },
              'spec':{
                'allowPrivilegeEscalation':false,
                'allowedCapabilities':[
                  '*'
                ],
                'fsGroup':{
                  'rule':'RunAsAny'
                },
                'hostIPC':false,
                'hostNetwork':true,
                'hostPID':false,
                'hostPorts':[
                  {
                    'max':65535,
                    'min':1000
                  }
                ],
                'privileged':false,
                'runAsUser':{
                  'rule':'RunAsAny'
                },
                'seLinux':{
                  'rule':'RunAsAny'
                },
                'supplementalGroups':{
                  'rule':'RunAsAny'
                },
                'volumes':[
                  '*'
                ]
              }
            },
            'status':{
              'Validity':{

              }
            }
          }
        ],
        'remediationAction':'enforce'
      },
      '__typename':'ExistingCompliance'
    },
    {
      'name':'policy-iam',
      'namespace':'mcm',
      'annotations':{
        'kubectl.kubernetes.io/last-applied-configuration':'{"apiVersion":"policy.mcm.ibm.com/v1alpha1","kind":"Policy","metadata":{"annotations":{"policy.mcm.ibm.com/categories":"SystemAndInformationIntegrity","policy.mcm.ibm.com/controls":"MutationAdvisor","policy.mcm.ibm.com/standards":"NIST"},"name":"policy-iam","namespace":"mcm"},"spec":{"policy-templates":[{"objectDefinition":{"apiVersion":"mcm-grcpolicy.ibm.com/v1alpha1","kind":"IamPolicy","metadata":{"label":{"category":"System-Integrity"},"name":"iam-policy-example"},"spec":{"maxClusterRoleBindingUsers":5,"namespaceSelector":{"exclude":["kube-system"],"include":["default","kube-*"]},"remediationAction":"enforce"}}}]}}\n',
        'policy.mcm.ibm.com/categories':'SystemAndInformationIntegrity',
        'policy.mcm.ibm.com/controls':'MutationAdvisor',
        'policy.mcm.ibm.com/standards':'NIST',
        'seed-generation':'1'
      },
      'spec':{
        'namespaces':{

        },
        'policy-templates':[
          {
            'objectDefinition':{
              'apiVersion':'mcm-grcpolicy.ibm.com/v1alpha1',
              'kind':'IamPolicy',
              'metadata':{
                'label':{
                  'category':'System-Integrity'
                },
                'name':'iam-policy-example'
              },
              'spec':{
                'maxClusterRoleBindingUsers':5,
                'namespaceSelector':{
                  'exclude':[
                    'kube-system'
                  ],
                  'include':[
                    'default',
                    'kube-*'
                  ]
                },
                'remediationAction':'enforce'
              }
            },
            'status':{
              'Validity':{

              }
            }
          }
        ]
      },
      '__typename':'ExistingCompliance'
    },
    {
      'name':'policy-ma',
      'namespace':'mcm',
      'annotations':{
        'policy.mcm.ibm.com/categories':'SystemAndInformationIntegrity',
        'policy.mcm.ibm.com/controls':'MutationAdvisor',
        'policy.mcm.ibm.com/standards':'NIST',
        'seed-generation':'1'
      },
      'spec':{
        'namespaces':{

        },
        'policy-templates':[
          {
            'objectDefinition':{
              'apiVersion':'policies.ibm.com/v1alpha1',
              'kind':'MutationPolicy',
              'metadata':{
                'label':{
                  'category':'System-Integrity'
                },
                'name':'mutation-policy-example'
              },
              'spec':{
                'conditions':{
                  'ownership':[
                    'ReplicaSet',
                    'Deployment',
                    'DeamonSet',
                    'ReplicationController'
                  ]
                },
                'namespaceSelector':{
                  'exclude':[
                    'kube-system'
                  ],
                  'include':[
                    'default',
                    'kube-*'
                  ]
                },
                'remediationAction':'enforce'
              }
            },
            'status':{
              'Validity':{

              }
            }
          }
        ],
        'remediationAction':'enforce'
      },
      '__typename':'ExistingCompliance'
    },
    {
      'name':'policy-pod',
      'namespace':'mcm',
      'annotations':{
        'policy.mcm.ibm.com/categories':'SystemAndCommunicationsProtections,SystemAndInformationIntegrity',
        'policy.mcm.ibm.com/controls':'MutationAdvisor,VA',
        'policy.mcm.ibm.com/standards':'NIST,HIPAA',
        'seed-generation':'1'
      },
      'spec':{
        'complianceType':'musthave',
        'namespaces':{
          'exclude':[
            'kube*'
          ],
          'include':[
            'default'
          ]
        },
        'object-templates':[
          {
            'complianceType':'musthave',
            'objectDefinition':{
              'apiVersion':'v1',
              'kind':'Pod',
              'metadata':{
                'name':'nginx-pod'
              },
              'spec':{
                'containers':[
                  {
                    'image':'nginx:1.7.9',
                    'name':'nginx',
                    'ports':[
                      {
                        'containerPort':80
                      }
                    ]
                  }
                ]
              }
            },
            'status':{
              'Validity':{

              }
            }
          }
        ],
        'remediationAction':'inform'
      },
      '__typename':'ExistingCompliance'
    },
    {
      'name':'policy-role',
      'namespace':'mcm',
      'annotations':{
        'policy.mcm.ibm.com/categories':'SystemAndCommunicationsProtections,SystemAndInformationIntegrity',
        'policy.mcm.ibm.com/controls':'MutationAdvisor,VA',
        'policy.mcm.ibm.com/standards':'NIST,HIPAA',
        'seed-generation':'1'
      },
      'spec':{
        'namespaces':{
          'exclude':[
            'kube*'
          ],
          'include':[
            'default'
          ]
        },
        'remediationAction':'inform',
        'role-templates':[
          {
            'apiVersion':'roletemplate.mcm.ibm.com/v1alpha1',
            'complianceType':'musthave',
            'metadata':{
              'creationTimestamp':null,
              'name':'operator-role-policy'
            },
            'rules':[
              {
                'complianceType':'musthave',
                'policyRule':{
                  'apiGroups':[
                    'extensions',
                    'apps'
                  ],
                  'resources':[
                    'deployments'
                  ],
                  'verbs':[
                    'get',
                    'list',
                    'watch',
                    'create',
                    'delete',
                    'patch'
                  ]
                }
              }
            ],
            'selector':{
              'matchLabels':{
                'dev':'true'
              }
            },
            'status':{
              'Validity':{

              }
            }
          }
        ]
      },
      '__typename':'ExistingCompliance'
    },
    {
      'name':'policy1',
      'namespace':'mcm',
      'annotations':{
        'policy.mcm.ibm.com/categories':'SystemAndInformationIntegrity, RBAC',
        'policy.mcm.ibm.com/controls':'MutationAdvisor',
        'policy.mcm.ibm.com/standards':'NIST',
        'seed-generation':'2'
      },
      'spec':{
        'complianceType':'musthave',
        'namespaces':{
          'exclude':[
            'kube*'
          ],
          'include':[
            'default'
          ]
        },
        'object-templates':[
          {
            'complianceType':'musthave',
            'objectDefinition':{
              'apiVersion':'rbac.authorization.k8s.io/v1',
              'kind':'RoleBinding',
              'metadata':{
                'name':'operate-pods-rolebinding',
                'namespace':'default'
              },
              'roleRef':{
                'apiGroup':'rbac.authorization.k8s.io',
                'kind':'Role',
                'name':'operator'
              },
              'subjects':[
                {
                  'apiGroup':'rbac.authorization.k8s.io',
                  'kind':'User',
                  'name':'admin'
                }
              ]
            },
            'status':{
              'Validity':{

              }
            }
          },
          {
            'complianceType':'musthave',
            'objectDefinition':{
              'apiVersion':'policy/v1beta1',
              'kind':'PodSecurityPolicy',
              'metadata':{
                'annotations':{
                  'seccomp.security.alpha.kubernetes.io/allowedProfileNames':'*'
                },
                'name':'restricted-mcm'
              },
              'spec':{
                'allowPrivilegeEscalation':false,
                'allowedCapabilities':[
                  '*'
                ],
                'fsGroup':{
                  'rule':'RunAsAny'
                },
                'hostIPC':false,
                'hostNetwork':true,
                'hostPID':false,
                'hostPorts':[
                  {
                    'max':65535,
                    'min':1000
                  }
                ],
                'privileged':false,
                'runAsUser':{
                  'rule':'RunAsAny'
                },
                'seLinux':{
                  'rule':'RunAsAny'
                },
                'supplementalGroups':{
                  'rule':'RunAsAny'
                },
                'volumes':[
                  '*'
                ]
              }
            },
            'status':{
              'Validity':{

              }
            }
          },
          {
            'complianceType':'musthave',
            'objectDefinition':{
              'apiVersion':'networking.k8s.io/v1',
              'kind':'NetworkPolicy',
              'metadata':{
                'name':'deny-from-other-namespaces',
                'namespace':'default'
              },
              'spec':{
                'ingress':[
                  {
                    'from':[
                      {
                        'podSelector':{

                        }
                      }
                    ]
                  }
                ],
                'podSelector':{
                  'matchLabels':null
                }
              }
            },
            'status':{
              'Validity':{

              }
            }
          },
          {
            'complianceType':'musthave',
            'objectDefinition':{
              'apiVersion':'v1',
              'kind':'LimitRange',
              'metadata':{
                'name':'mem-limit-range'
              },
              'spec':{
                'limits':[
                  {
                    'default':{
                      'memory':'512Mi'
                    },
                    'defaultRequest':{
                      'memory':'256Mi'
                    },
                    'type':'Container'
                  }
                ]
              }
            },
            'status':{
              'Validity':{

              }
            }
          }
        ],
        'remediationAction':'inform',
        'role-templates':[
          {
            'apiVersion':'roletemplate.mcm.ibm.com/v1alpha1',
            'complianceType':'musthave',
            'metadata':{
              'creationTimestamp':null,
              'name':'operator-role'
            },
            'rules':[
              {
                'complianceType':'mustnothave',
                'policyRule':{
                  'apiGroups':[
                    'core'
                  ],
                  'resources':[
                    'secrets'
                  ],
                  'verbs':[
                    'get',
                    'list',
                    'watch',
                    'delete',
                    'create',
                    'update',
                    'patch'
                  ]
                }
              },
              {
                'complianceType':'musthave',
                'policyRule':{
                  'apiGroups':[
                    'core'
                  ],
                  'resources':[
                    'pods'
                  ],
                  'verbs':[
                    'get',
                    'list',
                    'watch'
                  ]
                }
              }
            ],
            'selector':{
              'matchLabels':{
                'dev':'true'
              }
            },
            'status':{
              'Validity':{

              }
            }
          }
        ]
      },
      '__typename':'ExistingCompliance'
    }
  ],
  '__typename':'Existing'
}



describe('CreationView component', () => {
  const setGetPolicyJSON = jest.fn()
  it('renders as expected', () => {
    const component = renderer.create(
      <CreationView
        existing={existing}
        setGetPolicyJSON={setGetPolicyJSON}
      />
    )
    expect(component.toJSON()).toMatchSnapshot()
  })
})
